package procad;

import java.awt.*;
import java.awt.image.BufferedImage;
import javax.swing.*;
import java.util.*;
import java.util.logging.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.*;
import java.text.MessageFormat;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import procad.Product.ProductController;
import procad.Product.ProductModel;
import procad.swing.UIManagerConfiguration.UIManagerConfiguration;

/**
 * Class created to Implements the user View of the form.
 * @author Marcelo
 * @since 07/11/2023
 */
public class ProCad extends javax.swing.JFrame {

    private final ProCadController procadcontroller;
    private final ProductModel productobj = new ProductModel();
    private final ProductController controlproduct = new ProductController();
    private String imagePath = "";
    
    /**
     * Creates new form ProCad
     */
    public ProCad() {
        UIManagerConfiguration.setLanguageConfiguration();

        initComponents();
        
        procadcontroller = new ProCadController(this);
        
        ProCadController.setDateFieldFormatter(fmtRegisterDate);
        ProCadController.setTodayDate(fmtRegisterDate);
        ProCadController.setBarCodeFormatter(fmtBarCode);
        ProCadController.setNCMFormatter(fmtNCM);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProductId = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        pnlInput = new javax.swing.JPanel();
        lblCod = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        lblRegisterDate = new javax.swing.JLabel();
        fmtRegisterDate = new javax.swing.JFormattedTextField();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblStockQuantity = new javax.swing.JLabel();
        txtStockQuantity = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        txaDescription = new javax.swing.JTextArea();
        lblMinStock = new javax.swing.JLabel();
        spiMinStock = new javax.swing.JSpinner();
        lblMaxStock = new javax.swing.JLabel();
        spiMaxStock = new javax.swing.JSpinner();
        lblBuyPrice = new javax.swing.JLabel();
        fmtBuyPrice = new javax.swing.JFormattedTextField();
        lblSellPrice = new javax.swing.JLabel();
        fmtSellPrice = new javax.swing.JFormattedTextField();
        lblProfitFactor = new javax.swing.JLabel();
        fmtProfitFactor = new javax.swing.JFormattedTextField();
        lblNCM = new javax.swing.JLabel();
        fmtNCM = new javax.swing.JFormattedTextField();
        lblBarCode = new javax.swing.JLabel();
        fmtBarCode = new javax.swing.JFormattedTextField();
        lblImage = new javax.swing.JLabel();
        lblProductImage = new javax.swing.JLabel();
        btnFileChooser = new javax.swing.JButton();
        pnlButton = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        spnProducts = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        jMenuBar = new javax.swing.JMenuBar();
        menRegister = new javax.swing.JMenu();
        mniProduct = new javax.swing.JMenuItem();
        menConfiguration = new javax.swing.JMenu();
        mniAbout = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProCad | Cadastro de Produtos");
        setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        setMaximumSize(new java.awt.Dimension(760, 780));
        setMinimumSize(new java.awt.Dimension(760, 780));
        setName("frmProCad"); // NOI18N
        setPreferredSize(new java.awt.Dimension(760, 780));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("ProCad | Cadastro de Produtos");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        pnlInput.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pnlInput.setPreferredSize(new java.awt.Dimension(492, 302));

        lblCod.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblCod.setText("Código");

        txtCod.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtCod.setToolTipText("Informe o código do produto.");

        lblStatus.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblStatus.setText("Status");

        cmbStatus.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmbStatus.setMaximumRowCount(2);
        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I - Inativo", "A - Ativo" }));
        cmbStatus.setToolTipText("Selecione o status do produto.\nI = Inativo.\nA = Ativo.");

        lblRegisterDate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblRegisterDate.setText("Data de cadastro");

        fmtRegisterDate.setToolTipText("Data em que o produto foi cadastrado.");
        fmtRegisterDate.setActionCommand("<Not Set>");
        fmtRegisterDate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        lblProductName.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblProductName.setText("Nome");

        txtProductName.setToolTipText("Informe o nome do produto.");

        lblStockQuantity.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblStockQuantity.setText("Quantidade em estoque");

        txtStockQuantity.setToolTipText("Informe a quantidade disponível no estoque do produto cadastrado.");

        lblDescription.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblDescription.setText("Descrição");

        txaDescription.setColumns(20);
        txaDescription.setLineWrap(true);
        txaDescription.setRows(900);
        txaDescription.setTabSize(900);
        txaDescription.setToolTipText("Uma breve descrição do produto");
        txaDescription.setMaximumSize(new java.awt.Dimension(220, 80));
        txaDescription.setMinimumSize(new java.awt.Dimension(220, 80));

        lblMinStock.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblMinStock.setText("Estoque minímo");

        lblMaxStock.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblMaxStock.setText("Estoque máximo");

        lblBuyPrice.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblBuyPrice.setText("Preço de compra");

        fmtBuyPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fmtBuyPriceFocusLost(evt);
            }
        });

        lblSellPrice.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblSellPrice.setText("Preço de venda");

        fmtSellPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fmtSellPriceFocusGained(evt);
            }
        });

        lblProfitFactor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblProfitFactor.setText("Fator lucro");

        fmtProfitFactor.setText("00,00 %");
        fmtProfitFactor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fmtProfitFactorMouseClicked(evt);
            }
        });

        lblNCM.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblNCM.setText("NCM");

        lblBarCode.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblBarCode.setText("Código de Barras GTIN / EAN");

        lblImage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblImage.setText("Imagem do produto");

        lblProductImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnFileChooser.setText("Escolher Arquivo");
        btnFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txaDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addComponent(lblDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(301, 301, 301))
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCod)
                                    .addComponent(lblCod, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fmtRegisterDate)
                                    .addComponent(lblRegisterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblStockQuantity)
                                    .addComponent(txtStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlInputLayout.createSequentialGroup()
                                        .addComponent(lblMinStock, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblMaxStock, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(lblImage)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(pnlInputLayout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(btnFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41)))
                        .addGap(71, 71, 71))
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNCM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlInputLayout.createSequentialGroup()
                                        .addComponent(spiMinStock, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spiMaxStock))
                                    .addComponent(lblBarCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fmtBarCode, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblProfitFactor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnlInputLayout.createSequentialGroup()
                                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(fmtBuyPrice)
                                            .addComponent(lblBuyPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblSellPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                            .addComponent(fmtSellPrice)))))
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addComponent(fmtProfitFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fmtNCM)))
                        .addGap(68, 68, 68)
                        .addComponent(lblProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCod)
                    .addComponent(lblStatus)
                    .addComponent(lblRegisterDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtRegisterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName)
                    .addComponent(lblStockQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txaDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxStock)
                    .addComponent(lblMinStock)
                    .addComponent(lblImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spiMinStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spiMaxStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBuyPrice)
                            .addComponent(lblSellPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fmtBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fmtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProfitFactor)
                            .addComponent(lblNCM))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fmtProfitFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fmtNCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(lblBarCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtBarCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFileChooser)))
                .addGap(38, 38, 38))
        );

        btnNew.setText("Novo");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnChange.setText("Alterar");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnExit.setText("Sair");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnClear.setText("Limpar");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPrint.setText("Imprimir");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnDelete.setText("Apagar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonLayout = new javax.swing.GroupLayout(pnlButton);
        pnlButton.setLayout(pnlButtonLayout);
        pnlButtonLayout.setHorizontalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlButtonLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnChange, btnClear, btnDelete, btnExit, btnNew, btnPrint});

        pnlButtonLayout.setVerticalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pnlButtonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnChange, btnClear, btnDelete, btnExit, btnNew, btnPrint});

        tblProducts.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cod", "Nome", "Status", "Estoque", "Min", "Max", "Preço Com.", "Preço Ven.", "Lucro %", "Cod Barras", "NCM", "Desc", "Imagem", "Cadastro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProducts.setShowGrid(true);
        tblProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductsMouseClicked(evt);
            }
        });
        spnProducts.setViewportView(tblProducts);
        if (tblProducts.getColumnModel().getColumnCount() > 0) {
            tblProducts.getColumnModel().getColumn(0).setResizable(false);
            tblProducts.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblProducts.getColumnModel().getColumn(3).setResizable(false);
            tblProducts.getColumnModel().getColumn(3).setPreferredWidth(70);
            tblProducts.getColumnModel().getColumn(5).setResizable(false);
            tblProducts.getColumnModel().getColumn(5).setPreferredWidth(40);
            tblProducts.getColumnModel().getColumn(6).setResizable(false);
            tblProducts.getColumnModel().getColumn(6).setPreferredWidth(45);
        }

        menRegister.setText("Cadastro");

        mniProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniProduct.setText("Produto");
        menRegister.add(mniProduct);

        jMenuBar.add(menRegister);

        menConfiguration.setText("Configurações");

        mniAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniAbout.setText("Sobre");
        mniAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAboutActionPerformed(evt);
            }
        });
        menConfiguration.add(mniAbout);
        menConfiguration.add(jSeparator1);

        mniExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniExit.setText("Sair");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        menConfiguration.add(mniExit);

        jMenuBar.add(menConfiguration);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlInput, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spnProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlInput, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spnProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        getAccessibleContext().setAccessibleName("frmProCad");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "Você está prestes a encerrar o programa, você tem certeza ?", "ATENÇÃO", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
         
        if(option == JOptionPane.OK_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "Você está prestes a limpar todos os dados inseridos, você tem certeza ?", "ATENÇÃO", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(option == JOptionPane.OK_OPTION) {
            procadcontroller.clearFields();
            lblProductImage.setIcon(new ImageIcon(""));
            ProCadController.setTodayDate(fmtRegisterDate);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        btnExitActionPerformed(evt);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAboutActionPerformed
        About about = new About();
        about.setLocationRelativeTo(this);
        about.setVisible(true);
    }//GEN-LAST:event_mniAboutActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
       try {
        String[] buyPrice = fmtBuyPrice.getText().split(" ");
        String[] sellPrice = fmtSellPrice.getText().split(" ");
        String[] profitFactor = fmtProfitFactor.getText().split(" ");
        Path destination;

        productobj.setProductCod(txtCod.getText());
        productobj.setProductStatus(cmbStatus.getSelectedItem().toString().charAt(0));
        productobj.setProductRegisterDate(fmtRegisterDate.getText());
        productobj.setProductName(txtProductName.getText());
        productobj.setProductStockQuantity(Integer.parseInt(txtStockQuantity.getText()));
        productobj.setProductDesc(txaDescription.getText());
        productobj.setProductMinStockQuantity((int) spiMinStock.getValue());
        productobj.setProductMaxStockQuantity((int) spiMaxStock.getValue());
        productobj.setProductBuyPrice(Float.parseFloat(buyPrice[0].replaceAll(",", ".")));
        productobj.setProductSellPrice(Float.parseFloat(sellPrice[0].replaceAll(",", ".")));
        productobj.setProductProfit(Float.parseFloat(profitFactor[0].replaceAll(",", ".")));
        productobj.setProductNCM(Integer.parseInt(fmtNCM.getText()));
        productobj.setProductBarCode(fmtBarCode.getText());

        if (imagePath != null && !imagePath.isEmpty()) {
            File selectedFile = new File(imagePath);
            destination = new File("../procad/src/procad/Images/", selectedFile.getName()).toPath();
            Files.copy(selectedFile.toPath(), destination, StandardCopyOption.REPLACE_EXISTING);

            productobj.setProductImage(destination.toString());
        }

        controlproduct.insertProduct(productobj);
        controlproduct.showProducts();

        procadcontroller.clearFields();
        ProCadController.setTodayDate(fmtRegisterDate);
        lblProductImage.setIcon(new ImageIcon("caminho_predefinido/default_image.jpg"));

        fmtBuyPrice.setEditable(true);
        fmtProfitFactor.setEditable(true);
    } catch (IOException | NumberFormatException e) {
        Logger.getLogger(ProCad.class.getName()).log(Level.SEVERE, null, e);
        JOptionPane.showMessageDialog(this, "Erro: " + e, "MENSAGEM DE ERRO", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnNewActionPerformed

    private void fmtProfitFactorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fmtProfitFactorMouseClicked
        String[] buyPrice;
        String[] sellPrice;
        
        buyPrice = fmtBuyPrice.getText().split(" ");
        sellPrice = fmtSellPrice.getText().split(" ");
        
        if(!"".equals(fmtBuyPrice.getText().replaceAll(",", ".")) && !"".equals(fmtSellPrice.getText().replaceAll(",", "."))) {
            try {
                var buyPriceFormat = Float.parseFloat(buyPrice[0].replaceAll(",", ".") );
                var sellPriceFormat = Float.parseFloat(sellPrice[0].replaceAll(",", ".") );
                float profit;

                profit = ((sellPriceFormat - buyPriceFormat) / buyPriceFormat) * 100;
                var format = String.format("%.02f", profit);

                if(format.equals("") || format.equals("NaN")) format = "00,00";

                fmtProfitFactor.setEditable(false);
                fmtProfitFactor.setText(format.concat(" %"));
            } catch(NumberFormatException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_fmtProfitFactorMouseClicked

    private void tblProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsMouseClicked
        if(evt.getClickCount() == 1) {
            btnFileChooser.setEnabled(false);
            btnNew.setEnabled(false);
            btnChange.setEnabled(true);
            btnDelete.setEnabled(true);

            ImageIcon imageIcon;
            Image scaledImage;

            String imagePathFromTable = tblProducts.getValueAt(tblProducts.getSelectedRow(), 13).toString();

            if (imagePathFromTable != null && !imagePathFromTable.isEmpty()) {
                try {
                    BufferedImage originalImage = ImageIO.read(new File(imagePathFromTable));
                    Image resizedImage = originalImage.getScaledInstance(154, 164, Image.SCALE_SMOOTH);
                    imageIcon = new ImageIcon(resizedImage);

                    scaledImage = imageIcon.getImage();
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Erro ao carregar a imagem.", "MENSAGEM DE ERRO", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                lblProductId.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 0).toString());

                txtCod.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 1).toString());
                txtProductName.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 2).toString());
                cmbStatus.setSelectedItem(tblProducts.getValueAt(tblProducts.getSelectedRow(), 3));
                txtStockQuantity.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(),4).toString());
                spiMinStock.setValue(tblProducts.getValueAt(tblProducts.getSelectedRow(),5));
                spiMaxStock.setValue(tblProducts.getValueAt(tblProducts.getSelectedRow(),6));
                fmtBuyPrice.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 7).toString());
                fmtSellPrice.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 8).toString());
                fmtProfitFactor.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 9).toString());
                fmtBarCode.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 10).toString());
                fmtNCM.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 11).toString());
                txaDescription.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 12).toString());
                lblProductImage.setIcon(new ImageIcon(scaledImage));
                fmtRegisterDate.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 14).toString());
            } else {
                JOptionPane.showMessageDialog(null, "Não foi registrada uma imagem para este produto.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                
                btnFileChooser.setEnabled(true);
                btnNew.setEnabled(false);
                btnChange.setEnabled(true);
                btnDelete.setEnabled(true);
            
                lblProductId.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 0).toString());

                txtCod.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 1).toString());
                txtProductName.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 2).toString());
                cmbStatus.setSelectedItem(tblProducts.getValueAt(tblProducts.getSelectedRow(), 3));
                txtStockQuantity.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(),4).toString());
                spiMinStock.setValue(tblProducts.getValueAt(tblProducts.getSelectedRow(),5));
                spiMaxStock.setValue(tblProducts.getValueAt(tblProducts.getSelectedRow(),6));
                fmtBuyPrice.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 7).toString());
                fmtSellPrice.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 8).toString());
                fmtProfitFactor.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 9).toString());
                fmtBarCode.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 10).toString());
                fmtNCM.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 11).toString());
                txaDescription.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 12).toString());;
                fmtRegisterDate.setText(tblProducts.getValueAt(tblProducts.getSelectedRow(), 14).toString());
            }
        }
    }//GEN-LAST:event_tblProductsMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        MessageFormat header = new MessageFormat ("ProCad | Produtos em Estoque");     
        MessageFormat footer = new MessageFormat ("Página {0, number, integer}");
        
        try {
             tblProducts.print(JTable.PrintMode.FIT_WIDTH,header,footer);
        } catch(java.awt.print.PrinterException e) {
             System.err.format("Impressão não encontrada", e.getMessage());
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            ArrayList<ProductModel> list = controlproduct.showProducts();
            DefaultTableModel dados = (DefaultTableModel)tblProducts.getModel();
            dados.setRowCount(0);
            
            ProCadController.setTodayDate(fmtRegisterDate);
            
            for(ProductModel productobj: list) {
                dados.addRow(new Object[]{
                    productobj.getProductId(), productobj.getProductCod(), productobj.getProductName(), productobj.getProductStatus(),
                    productobj.getProductStockQuantity(), productobj.getProductMinStockQuantity(), productobj.getProductMaxStockQuantity(),
                    productobj.getProductBuyPrice(), productobj.getProductSellPrice(), productobj.getProductProfit(),
                    productobj.getProductBarCode(), productobj.getProductNCM(), productobj.getProductDesc(),
                    productobj.getProductImage(), productobj.getProductRegisterDate()
                });
             }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Erro: "+ e);
        }  
    }//GEN-LAST:event_formWindowActivated

    private void fmtSellPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fmtSellPriceFocusGained
        String[] buyPrice = fmtBuyPrice.getText().replaceAll(",", ".").split(" ");
        String[] profitFactor = fmtProfitFactor.getText().replaceAll(",", ".").split(" ");
        
        try {
            float buyPriceFormat = Float.parseFloat(buyPrice[0].replaceAll(" R$",""));
            float profitFactorFormat = Float.parseFloat(profitFactor[0].replaceAll(" R$",""));

            float sell = buyPriceFormat + ((profitFactorFormat / 100) * buyPriceFormat);
            String format = String.format("%.02f", sell);

            if(format.equals("") || format.equals("NaN")) format = "00,00";

            fmtSellPrice.setText(format.concat(" R$"));
        } catch(NumberFormatException e) {
            if(e.getMessage().equals("empty String"))
                System.out.println("Erro ao formatar: O campo \"Preço Venda\" está vazio\nEm: " + fmtSellPrice.getClass().getSimpleName() + " fmtSellPrice");
            else
                System.out.println("Erro ao formatar: " + e.getMessage() + "\nEm: " + fmtSellPrice.getClass().getSimpleName() + " fmtSellPrice");
        }
    }//GEN-LAST:event_fmtSellPriceFocusGained

    private void fmtBuyPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fmtBuyPriceFocusLost
        try {
            float profit = Float.parseFloat(fmtBuyPrice.getText().replaceAll(",","."));
            var format = String.format("%.2f", profit);
            
            if(format.equals("") || format.equals("NaN")) format = "0,00";
            
            fmtBuyPrice.setText(format.concat(" R$"));
        } catch(NumberFormatException e) {
             if(e.getMessage().equals("empty String"))
                System.out.println("Erro ao formatar: O campo \"Preço Compra\" está vazio\nEm: " + fmtBuyPrice.getClass().getSimpleName() + " fmtBuyPrice");
            else
                System.out.println("Erro ao formatar: " + e.getMessage() + "\nEm: " + fmtBuyPrice.getClass().getSimpleName() + " fmtBuyPrice");
        }
    }//GEN-LAST:event_fmtBuyPriceFocusLost

    private void btnFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileChooserActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setDialogTitle("Escolher Imagem");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Imagens (.jpg, .jpeg, .png, .webm, .heif)","jpg", "jpeg", "png", "webm", "heif"));

        int userSelection = fileChooser.showOpenDialog(this);

        try {
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                this.imagePath = selectedFile.getAbsolutePath();
                System.out.println("Caminho da imagem: " + this.imagePath);

                updateProductImage();
            } else if (userSelection == JFileChooser.CANCEL_OPTION || userSelection == JFileChooser.ERROR_OPTION) {
                System.out.println("Seleção de arquivo cancelada");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao salvar o arquivo.", "MENSAGEM DE ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFileChooserActionPerformed

    /**
     * Method to update the Product Image at lblProductImage
     */
    private void updateProductImage() {
        try {
            BufferedImage image = ImageIO.read(new File(this.imagePath));
            ImageIcon imageIcon = new ImageIcon(image.getScaledInstance(154, 164, Image.SCALE_SMOOTH));
            lblProductImage.setIcon(imageIcon);
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao exibir a imagem: " + e.getMessage(), "MENSAGEM DE ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if(!txtCod.getText().equals("")) {
                productobj.setProductId(Integer.parseInt(lblProductId.getText()));
                productobj.setProductCod(txtCod.getText());
                
                controlproduct.deleteProduct(productobj);
                controlproduct.showProducts();
                
                procadcontroller.clearFields();
                lblProductImage.setIcon(new ImageIcon(""));
                ProCadController.setTodayDate(fmtRegisterDate);
                
                lblProductImage.setIcon(new ImageIcon(""));
            }else
            JOptionPane.showMessageDialog(null,"Preencha o campo Código!!");
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null,"Erro: "+ e);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        String[] buyPrice = fmtBuyPrice.getText().split(" ");
        String[] sellPrice = fmtSellPrice.getText().split(" ");
        String[] profitFactor = fmtProfitFactor.getText().split(" ");;

        try {
                if(!txtCod.getText().equals("")) {
                    ImageIcon imageIcon = new ImageIcon(this.imagePath);
                    Image scaledImage = imageIcon.getImage().getScaledInstance(154, 164, Image.SCALE_SMOOTH);
                    ImageIcon resizedImage = new ImageIcon(scaledImage);
                    
                    productobj.setProductId(Integer.parseInt(lblProductId.getText()));
                    productobj.setProductCod(txtCod.getText());
                    productobj.setProductStatus(cmbStatus.getSelectedItem().toString().charAt(0));
                    productobj.setProductRegisterDate(fmtRegisterDate.getText());
                    productobj.setProductName(txtProductName.getText());
                    productobj.setProductStockQuantity(Integer.parseInt(txtStockQuantity.getText()));
                    productobj.setProductDesc(txaDescription.getText());
                    productobj.setProductMinStockQuantity((int)spiMinStock.getValue());
                    productobj.setProductMaxStockQuantity((int)spiMaxStock.getValue());
                    productobj.setProductBuyPrice(Float.parseFloat( buyPrice[0].replaceAll(",",".")));
                    productobj.setProductSellPrice(Float.parseFloat(sellPrice[0].replaceAll(",",".")));
                    productobj.setProductProfit(Float.parseFloat(profitFactor[0].replaceAll(",",".")));
                    productobj.setProductNCM(Integer.parseInt(fmtNCM.getText()));
                    productobj.setProductBarCode(fmtBarCode.getText());
                    productobj.setProductImage(imagePath);

                    controlproduct.changeProduct(productobj);
                    controlproduct.showProducts();
                    
                    lblProductImage.setIcon(new ImageIcon(""));
                    procadcontroller.clearFields();
                    ProCadController.setTodayDate(fmtRegisterDate);

                    btnChange.setEnabled(false);
                    btnDelete.setEnabled(false);
                    btnNew.setEnabled(true);

                    lblProductImage.setIcon(resizedImage);

            } else {
                JOptionPane.showMessageDialog(null,"Preencha o campo Código!");
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null,"Erro: " + e);
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        SwingUtilities.invokeLater(() -> {
            new ProCad().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox<String> cmbStatus;
    protected javax.swing.JFormattedTextField fmtBarCode;
    protected javax.swing.JFormattedTextField fmtBuyPrice;
    protected javax.swing.JFormattedTextField fmtNCM;
    protected javax.swing.JFormattedTextField fmtProfitFactor;
    protected javax.swing.JFormattedTextField fmtRegisterDate;
    protected javax.swing.JFormattedTextField fmtSellPrice;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblBarCode;
    private javax.swing.JLabel lblBuyPrice;
    private javax.swing.JLabel lblCod;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblMaxStock;
    private javax.swing.JLabel lblMinStock;
    private javax.swing.JLabel lblNCM;
    private javax.swing.JLabel lblProductId;
    private javax.swing.JLabel lblProductImage;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblProfitFactor;
    private javax.swing.JLabel lblRegisterDate;
    private javax.swing.JLabel lblSellPrice;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStockQuantity;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JMenu menConfiguration;
    private javax.swing.JMenu menRegister;
    private javax.swing.JMenuItem mniAbout;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniProduct;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlInput;
    protected javax.swing.JSpinner spiMaxStock;
    protected javax.swing.JSpinner spiMinStock;
    private javax.swing.JScrollPane spnProducts;
    public javax.swing.JTable tblProducts;
    protected javax.swing.JTextArea txaDescription;
    protected javax.swing.JTextField txtCod;
    protected javax.swing.JTextField txtProductName;
    protected javax.swing.JTextField txtStockQuantity;
    // End of variables declaration//GEN-END:variables
}
